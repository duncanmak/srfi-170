Please see copyright notice in 170/COPYING.

There are several ways you might use this Chibi Scheme example
implementation of SRFI 170 for Linux and OpenBSD (note that it is not
yet production quality, and taking it to that level is not (yet) on
the road-map, Chibi Scheme already has a robust set of POSIX libraries,
from which this SRFI implementation freely cribbed).

You can read 170.stub and aux.c for a guide to translating to your own
FFI, the code above it should then work with little modification
besides whatever changes are made in calling down to C.

If starting from this SRFI 170 repository and adding to an existing
copy of Chibi Scheme, copy 170.sld, 174.sld, and the 170 directory
into lib/srfi.

If using stock Chibi Scheme 0.8.0, copy Makefile-0.8.0 to Makefile,
and lib-tests.scm-0.8.0 to tests/lib-tests.scm, and make and test as
normal.

If using a newer version of Chibi Scheme, merge Makefile with the top
level one, lib-tests.scm with the one in tests, and build and test as
normal.

In all cases above and below, note that installation and
uninstallation have not been tested.

It has been tested and run without warnings or errors on x86-64
systems running Ubuntu 18.04 Bionic Beaver compiled with GCC version
7.4.0, and OpenBSD 6.5 compiled with Clang version 7.0.1.

In the following examples, gmake is either Gnu Make on OpenBSD, or an
alias of some sort on Linux to Gnu Make.

To build Chibi Scheme and test just this SRFI in place, execute the following:

gmake ; LD_LIBRARY_PATH=".:" DYLD_LIBRARY_PATH=".:" CHIBI_IGNORE_SYSTEM_PATH=1 CHIBI_MODULE_PATH=lib ./chibi-scheme -m "(srfi 170 test)" -e "(run-tests)"

To exercise in place, execute:

LD_LIBRARY_PATH=".:" DYLD_LIBRARY_PATH=".:" CHIBI_IGNORE_SYSTEM_PATH=1 CHIBI_MODULE_PATH=lib ./chibi-scheme -m "(srfi 170)"

A full version can be found in https://github.com/hga/chibi-scheme,
forked from https://github.com/ashinn/chibi-scheme, see branches
srfi-170 and srfi-170-new.  That'll get you the complete history,
you can check out and build it like this:

git clone https://github.com/hga/chibi-scheme
cd chibi-scheme/
git checkout srfi-170
gmake ; LD_LIBRARY_PATH=".:" DYLD_LIBRARY_PATH=".:" CHIBI_IGNORE_SYSTEM_PATH=1 CHIBI_MODULE_PATH=lib ./chibi-scheme -m "(srfi 170 test)" -e "(run-tests)"

The test suite 170/test.sld can be run as root, and needs to be to
fully test some features, see the comments at its top.

The test suite is pretty generic and should be adaptable to your
implementation, note aux.c for some unexported magic like (errno) and
(set-errno), and common.scm for Scheme code shared by both.

As of initial release, it includes a very minimal implementation of
the pre-release timespec SRFI as a disjoint type in 174.sld.
